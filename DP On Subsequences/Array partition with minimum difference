int minSubsetSumDifference(vector<int>& arr, int n)
{
    int totsum = 0;
    for(auto i:arr) totsum += i;

    int k = totsum;
    vector<vector<bool>> dp(n,vector<bool> (k+1,false));
        
        
    for(int i=0;i<n;i++) dp[i][0] = true;
    if(arr[0] <= k) dp[0][arr[0]] = true;
    
    
    for(int ind=1;ind<n;ind++){
        for(int target = 1;target<=totsum;target++){
            bool nontake = dp[ind-1][target];
            bool take = false;
            if(target >= arr[ind]) take = dp[ind-1][target-arr[ind]];
            
            dp[ind][target] = (take||nontake);
        }
    } 

    int mini = 1e9;

    for(int s1=0;s1<=totsum/2;s1++){
        if(dp[n-1][s1]==true){
            mini = min(mini, abs((totsum-s1)-s1));
        }
    }

        return mini;
}
